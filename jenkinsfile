pipeline{
    agent any
    tools{
        maven 'M2'
    }
    
    environment {
        registry = 'anand40090/spring-boot-demo'
        registryCredential = 'docker-cred'
        dockerImage = ''

    }

    stages{
        stage('Git Pull'){
            steps{
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/anand40090/springboot-java-poject-1.git'
            }
        }
        stage('Build'){
            steps{
                sh 'mvn clean install'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sq-1') {
                    sh 'mvn verify sonar:sonar'
                }
            }
        }
       stage('Quality Gate') {
            steps {
                script {
                    def qualityGate = waitForQualityGate(abortPipeline: false, credentialsId: 'sq-1')
                    if (qualityGate.status != 'OK') {
                        echo "Quality gate failed: ${qualityGate.status}"
                    } else {
                        echo "Quality gate passed: ${qualityGate.status}"
                    }
                }
            }
        }
        stage('Docker Image'){
            steps{
                script{
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        stage('Image Push'){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'docker-cred', passwordVariable: 'docker-cred')]){
                        docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                             dockerImage.push()
                    }
                }
            }
        }
    }
  }
}
